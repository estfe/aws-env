Login

1. Login at aws UI
2. Create my user with Admin permissions
    2.1 Enabled access key - took notes of them
3. Connect to my AWS account from AWS CLI
    3.1 aws-configure --profile to-aws
    3.2 Confirmed it worked: aws sts get-caller-identity

---

Setting up in UI

1. Create S3 bucket from UI - "to-bucket-f" the name
2. Create a Dynamodb table for state locking from UI
3. Create tfaccount user from UI

---

Creating terraform state file

1. Create backend.tf and run terraform init

---

Creating terraform iam files
1. Added it in root module
2. Created modules/iam/main.tf
3. Created tfaccount there
4. Applied

---

eks
1. Gave tfaccount root privileges since it was taking too much time to make it work
2. Cluster is created with terraform
3. Faced bug that eks nodegroup desired size doesn't change after creation. Will work on that later

---

Application

1. Create a hello world

---

CI
1. Created a CI to store images in AWS ECR

---

Expose app to outside world

1. Install taefrik with helm charts + Terraform
2. Install  metrics server with helm charts + terraform
3. export KUBE_CONFIG_PATH=~/.kube/config - to make them work.
4. Make the app running constinuously
5. Created service for app + traefik ingress

---

Create helm charts

1. Helm charts created, tested and fully functioning

---

CI part 2

1. Install arc-gha-rs-controller with terrform in the cluster to run CI inside the cluster
2. Install arc-runner-set with terraform in the cluster 
3. Make the CI work inside the cluster
4. Use community package to test if helm chart renders in the CI
